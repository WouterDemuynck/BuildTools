BuildTools README
=================

1. Quick Start
--------------

You have just installed the BuildTools NuGet package. We have prepared your solution for
supporting the BuildTools automatic versioning MSBuild tasks and registered it with the
target project in your solution. We have also added an initial major and minor version
property to your project.

When you want to customize the version number, you should unload your project and edit
the raw MSBuild file, just find and edit the <MajorVersion> and <MinorVersion> properties:

<PropertyGroup>
	<MajorVersion>2</MajorVersion>
	<MinorVersion>0</MinorVersion>
</PropertyGroup>

If you want to customize the AssemblyInformationalVersionAttribute in the generated assembly 
information file, you should add a ServicePackNumber and/or HotfixNumber property as well:

<PropertyGroup>
	<MajorVersion>2</MajorVersion>
	<MinorVersion>0</MinorVersion>
	<ServicePackNumber>1</ServicePackNumber>
</PropertyGroup>

Also, remember to remove the AssemblyVersionAttribute, AssemblyFileVersionAttribute and
AssemblyInformationalVersionAttribute entries from your existing AssemblyInfo.cs file, or
you will not be able to build your project (because only one instance of each of those
attributes is allowed in an assembly).

2. Further Customizing the Version Number
-----------------------------------------

You can further customize the versioning algorithm by editing your project MSBuild file 
and adding or editing some properties. Let's have a look at the different versioning
methods currently supported by BuildTools...

A version number consists of four integer numbers: "a.b.c.d". "a" and "b" are the major
and minor version numbers (controlled by the MajorVersion and MinorVersion MSBuild 
properies). "c" is the build number and "d" is the revision number, these are automatically
generated by BuildTools based on the BuildType and RevisionType MSBuild properties.

For the BuildType MSBuild property, you can specify one of the following values, the default
value is marked with an asterisk (*):

	Fixed, Increment, YearMonthDay*, MonthDay, BuildDay

	Value			Meaning
	-----------------------------------------------------------------------------------------------
	Fixed			Never change the existing build number.
	Increment		Increment the build number by one on each build.
	YearMonthDay	The build number is the number of years since the starting day of the
					project, suffixed with the month of the year and the day of the month.
					e.g. 40426 for a project in its fourth year and built on April 26.
	MonthDay		The build number is the number of months since the starting day of the
					project, suffixed with the day of the current month.
					e.g. 626 for a project in its 6th month and built on the 26th day of that
					month.
	BuildDay		The build number is the number of years since the starting day of the
					project, suffixed with the current day of the year.
					e.g. 312 for a project in its third year and built on January 12.

For the RevisionType MSBuild property you should specify one of the following values:

	Fixed, Increment, BuildIncrement, HourMinute*, DaySecond, DayFraction
	
	Value			Meaning
	-----------------------------------------------------------------------------------------------
	Fixed			Never change the existing revision number.
	Increment		Increment the revision number by one on each build.
	BuildIncrement	Increment the revision number by one on each build, but reset it to zero when
					the build number has changed.
	HourMinute		The revision number is calculated by formatting the current time using the 
					'HHmm' format.
					e.g. 919 for a project built at 9:19 AM.
	DaySecond		The revision is the number of seconds passed since midnight at the time of the
					build, divided by 10 to fit in the revision field.
	DayFraction		The revision is the number of seconds passed since midnight at the time of the
					build, but rescaled to fit in the revision field.
					e.g. 0 for a build at midnight, 65535 for a build one second before midnight.

As you have undoubtably deduced, some of these algorithms rely on knowing the previously generated
version number, and others on knowing the starting date of the project.

For setting the starting day of the project, you can add the StartingDate MSBuild property and
specify a culture-invariant date to base the calculations on. To be honest, I have only tested
using the yyyy-MM-dd format, so you probably best stick to that :)

Also, when left unspecified, BuildTools will assume the project file's creation date as starting
date for the calculation.

The algorithms that use the StartingDate property are:
	BuildType:		YearMonthDay*, MonthDay, BuildDay

For remembering the old version number as used by some other algorithms, you should specify the
VersionFile MSBuild property and specify a file name relative to the project directory in which
to store the last generated version number. The file will be automatically created and can be
committed to source control.

When left unspecified, BuildTools will create and use 'Generated.version' as file name for the 
version file.

The algorithms that use the VersionFile property are:
	BuildType:		Fixed, Increment
	RevisionType:	Fixed, Increment, BuildIncrement
